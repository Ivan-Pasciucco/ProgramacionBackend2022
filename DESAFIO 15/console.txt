-ejecutar servidor modo FORK ✓
node server.js

-ejecutar servidor modo CLUSTER ✓
node server.js --modo="CLUSTER"

-ejecutar servidor con nodemon modo FORK ✓
nodemon server.js

-ejecutar servidor con nodemon en modo CLUSTER ✓
nodemon server.js --modo="CLUSTER"

-ejecutar servidor con forever en modo FORK
forever start server.js

-ejecutar servidor con forever en modo CLUSTER
forever start server.js --modo="CLUSTER"

-listar procesos activos con forever
forever list

-listar procesos activos en linux
htop
luego filtrar con f3 y gestionar con interfaz grafica

-ejecutar el servidor con pm2 en modo FORK
pm2 start server.js --name="serverFork" --watch

-ejecutar el servidor con pm2 en modo CLUSTER
pm2 start server.js --name="serverCluster" --watch -i max

-listar procesos activos con pm2
pm2 list

-listar procesos activos en linux por terminal
pidof node

-finalizar un proceso en especifico por terminal
kill [pid]
-finalizar todos los procesos de node en linux
killall node

-finalizar todos los procesos desde forever
forever stopall

-detener todos los procesos de pm2
pm2 stop all

-eliminar todos los procesos de pm2
pm2 delete all

-iniciar nginx en linux
sudo systemctl start nginx

-ver estado de ejecucion de nginx
systemctl status nginx

-ejecutar el servidor en modo CLUSTER para nginx con la ruta /api/randoms en el puerto 8081
node server.js --puerto=8081 --modo="CLUSTER"

-ejecutar el servidor en modo FORK para probar nginx con la ruta localhost/info en el puerto 8080
node server.js --puerto=8080

-ejecutar el servidor en fodo FORK con pm2 para que el servidor de nginx los gestione como cluster en 4 puertos diferentes
pm2 start server.js --name="server8083" --watch -- 8083
pm2 start server.js --name="server8084" --watch -- 8084
pm2 start server.js --name="server8085" --watch -- 8085